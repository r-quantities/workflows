on: workflow_call

name: build

jobs:
  quantities:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.version == 'cran' }}
    name: quantities (${{ matrix.version }}) on ${{ matrix.os }} (${{ matrix.r }})

    strategy:
      fail-fast: false
      matrix:
        version: [cran, devel]
        include:
        - {os: ubuntu-latest, r: 'devel', http-user-agent: 'release'}
        - {os: ubuntu-latest, r: 'release'}
        - {os: ubuntu-latest, r: 'oldrel'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      _R_CHECK_CRAN_INCOMING_REMOTE_: false
      CHECK_VERSION: ${{ matrix.version }}

    steps:
    - uses: actions/checkout@v4
      with:
        repository: r-quantities/quantities
        fetch-depth: 0
    - uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.r }}
        http-user-agent: ${{ matrix.http-user-agent }}
        use-public-rspm: true
    - uses: r-lib/actions/setup-pandoc@v2

    - name: Add Remotes
      run: |
        PKG="r-quantities/errorsr-quantities/units"
        PKG=$(echo $PKG | sed "s|$GITHUB_REPOSITORY||")
        REMOTES="Remotes: $GITHUB_REPOSITORY@$GITHUB_SHA"
        [ $CHECK_VERSION = "cran" ] \
          && git checkout $(git tag | tail -n1) \
          || REMOTES="$REMOTES, $PKG"
        echo $REMOTES >> DESCRIPTION

    - name: Install package dependencies
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        extra-packages: any::rcmdcheck
        needs: check

    - name: Check
      uses: r-lib/actions/check-r-package@v2
      with:
        upload-snapshots: true
